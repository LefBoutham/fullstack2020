{"version":3,"sources":["components/person.js","components/persons.js","components/filterPeople.js","components/personForm.js","services/persons.js","components/app.js","index.js"],"names":["Person","onDelete","person","name","number","onClick","Persons","persons","filter","personsList","toLowerCase","includes","map","key","Filter","props","value","onChange","handleFilter","PersonForm","nameInput","handleNameChange","handleNumberChange","numberInput","addNewPerson","type","baseUrl","axios","get","newObject","post","id","put","delete","ErrorMsg","message","className","SuccessMsg","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personsService","then","response","data","event","target","preventDefault","nameExists","some","isNumberIdentical","alert","window","confirm","selectedPerson","console","log","updatedPerson","returnValue","modifiedPersons","personIndex","findIndex","el","setTimeout","catch","err","error","status","headers","personObject","newPersonObject","concat","updatedPersons","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82672cf8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({ onDelete, person }) => {\n  return (\n    <>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => onDelete(person)}>Delete</button>\n      <br />\n    </>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./person\";\n\nconst Persons = ({ persons, filter, onDelete }) => {\n  const listFilter = (person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase());\n\n  const personsList = persons\n    .filter(listFilter)\n    .map((person) => (\n      <Person key={person.name} person={person} onDelete={onDelete} />\n    ));\n\n  return <>{personsList}</>;\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = (props) => {\n  return (\n    <>\n      filter shown with{\" \"}\n      <input value={props.value} onChange={props.handleFilter} /> <br />\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  nameInput,\n  handleNameChange,\n  handleNumberChange,\n  numberInput,\n  addNewPerson,\n}) => {\n  return (\n    <>\n      <form>\n        <div>\n          name: <input value={nameInput} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={numberInput} onChange={handleNumberChange} />\n        </div>\n\n        <div>\n          <button onClick={addNewPerson} type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deletePerson: deletePerson,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Persons from \"./persons\";\nimport Filter from \"./filterPeople\";\nimport PersonForm from \"./personForm\";\nimport personsService from \"../services/persons\";\nimport \"../index.css\";\n\nconst ErrorMsg = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nconst SuccessMsg = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"success\">{message}</div>;\n};\n\nconst App = () => {\n  // Handle states\n  const [persons, setPersons] = useState([\n    { name: \"Arto Hellas\", number: \"040-123456\" },\n  ]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  // Fetch persons from server\n  useEffect(() => {\n    personsService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  // Event handlers\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilter = (event) => setFilter(event.target.value);\n\n  // Add a new person on the list\n  const addNewPerson = (event) => {\n    event.preventDefault();\n    const nameExists = persons.some((person) => person.name === newName);\n    const isNumberIdentical = persons.some(\n      (person) => person.number === newNumber && person.name === newName\n    );\n\n    // If name and number are the same\n    if (nameExists && isNumberIdentical) {\n      alert(`${newName} is already added to phonebook`);\n      return;\n\n      // If only the name is the same\n    } else if (nameExists) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace old number with a new one?`\n        )\n      ) {\n        const selectedPerson = persons.filter(\n          (person) => person.name === newName\n        )[0];\n        console.log(selectedPerson);\n        const updatedPerson = {\n          ...selectedPerson,\n          number: newNumber,\n        };\n        console.log(updatedPerson);\n        personsService\n          .update(selectedPerson.id, updatedPerson)\n          .then((returnValue) => {\n            console.log(returnValue.data);\n            const modifiedPersons = persons;\n            const personIndex = modifiedPersons.findIndex(\n              (el) => el === selectedPerson\n            );\n            modifiedPersons[personIndex] = returnValue.data;\n            setPersons(modifiedPersons);\n            setSuccessMessage(`Edited ${selectedPerson.name}`);\n            setTimeout(() => setSuccessMessage(null), 5000);\n            console.log(modifiedPersons);\n          })\n          .catch((err) => {\n            console.error(err.response.data); // ***\n            console.error(err.response.status); // ***\n            console.error(err.response.headers); // ***\n            setErrorMessage(\n              `Information of ${updatedPerson.name} has already been removed from the server`\n            );\n            setTimeout(() => setErrorMessage(null), 5000);\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    }\n\n    // If the person is new, add the person on the list.\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n      personsService\n        .create(personObject)\n        .then((response) => {\n          const newPersonObject = { ...personObject, id: response.data.id };\n          setPersons(persons.concat(newPersonObject));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setSuccessMessage(`Added ${newPersonObject.name}`);\n          setTimeout(() => setSuccessMessage(null), 5000);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  // Delete person handler\n  const handleDeletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      const updatedPersons = persons.filter((x) => {\n        return x.id !== person.id;\n      });\n      personsService.deletePerson(person.id);\n      console.log(updatedPersons);\n      setPersons(updatedPersons);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorMsg message={errorMessage} />\n      <SuccessMsg message={successMessage} />\n      <Filter value={newFilter} persons={persons} handleFilter={handleFilter} />\n      <h3>Add a new</h3>\n      <PersonForm\n        nameInput={newName}\n        numberInput={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addNewPerson={addNewPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        filter={newFilter}\n        onDelete={handleDeletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}